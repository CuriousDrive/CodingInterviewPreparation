Stack 
    -> Push
    -> Pop
    -> Peek
    -> TryPeek
    -> TryPop

Queue 
    -> Enqueue
    -> Dequeue
    -> Peek
    -> TryPeek
    -> TryDequeue

SortedList
    -> It's a KeyValue data structure
    -> The keys get sorted as soon as they are inserted
    -> There cannot to duplicate keys
    -> Values can be null or duplicate
    -> It's faster than List

Dictionary
    -> Dictionary<TKey, TValue> stores key-value pairs.
    -> Comes under System.Collections.Generic namespace.
    -> Implements IDictionary<TKey, TValue> interface.
    -> Keys must be unique and cannot be null.
    -> Values can be null or duplicate.
    -> Values can be accessed by passing associated key in the indexer e.g. myDictionary[key]
    -> Elements are stored as KeyValuePair<TKey, TValue> objects.

Hashtable 
    -> Hashtable stores key-value pairs.
    -> Comes under System.Collection namespace.
    -> Implements IDictionary interface.
    -> Keys must be unique and cannot be null.
    -> Values can be null or duplicate.
    -> Values can be accessed by passing associated key in the indexer e.g. myHashtable[key]
    -> Elements are stored as DictionaryEntry objects.

Hashset
    -> HashSet<T> is an unordered collection of the unique elements
    -> It has linq functions